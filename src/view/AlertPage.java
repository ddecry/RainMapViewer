/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import org.jxmapviewer.JXMapViewer;
import org.jxmapviewer.OSMTileFactoryInfo;
import org.jxmapviewer.input.CenterMapListener;
import org.jxmapviewer.input.PanKeyListener;
import org.jxmapviewer.input.PanMouseInputListener;
import org.jxmapviewer.input.ZoomMouseWheelListenerCursor;
import org.jxmapviewer.painter.CompoundPainter;
import org.jxmapviewer.painter.Painter;
import org.jxmapviewer.viewer.DefaultTileFactory;
import org.jxmapviewer.viewer.GeoPosition;
import org.jxmapviewer.viewer.TileFactoryInfo;
import org.jxmapviewer.viewer.Waypoint;
import org.jxmapviewer.viewer.WaypointPainter;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.util.HashSet;
import java.util.Set;
import org.jxmapviewer.viewer.DefaultWaypoint;

/**
 *
 * @author alway
 */
public class AlertPage extends javax.swing.JFrame {

    /**
     * Creates new form MainPage
     */
    public AlertPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Background = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AlertsTable = new javax.swing.JTable();
        SideMenuPanel = new javax.swing.JPanel();
        PerfilPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        AlertasPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        MapaPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        BotaoPanel = new javax.swing.JPanel();
        BotaoAlerta = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Flood Viewer");

        Background.setBackground(new java.awt.Color(0, 153, 204));
        Background.setToolTipText("");

        AlertsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Alagamento", "22:30", "Crítico", "Rua 19 de Novembro", null, null},
                {"Engarrafamento", "17:00", "Médio", "Ponte Estaiada", null, null},
                {"Alagamento", "15:00", "Baixo", "Avenida Brasil", null, null}
            },
            new String [] {
                "Tipo", "Hora", "Nível", "Local", "Latitude", "Longitude"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(AlertsTable);

        SideMenuPanel.setBackground(new java.awt.Color(255, 255, 255));
        SideMenuPanel.setPreferredSize(new java.awt.Dimension(200, 300));
        SideMenuPanel.setRequestFocusEnabled(false);

        PerfilPanel.setBackground(new java.awt.Color(255, 255, 255));
        PerfilPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PerfilPanel.setPreferredSize(new java.awt.Dimension(143, 90));
        PerfilPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PerfilPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PerfilPanelMouseExited(evt);
            }
        });
        PerfilPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Perfil");
        PerfilPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, -1, -1));

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/wdffTCL6rzidQAAAABJRU5ErkJggg.png"))); // NOI18N
        PerfilPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        AlertasPanel.setBackground(new java.awt.Color(255, 255, 255));
        AlertasPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AlertasPanel.setPreferredSize(new java.awt.Dimension(143, 90));
        AlertasPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AlertasPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AlertasPanelMouseExited(evt);
            }
        });
        AlertasPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/w9FOGLn501GZgAAAABJRU5ErkJggg.png"))); // NOI18N
        AlertasPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Alertas");
        AlertasPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, -1, 30));

        MapaPanel.setBackground(new java.awt.Color(255, 255, 255));
        MapaPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MapaPanel.setRequestFocusEnabled(false);
        MapaPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MapaPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MapaPanelMouseExited(evt);
            }
        });
        MapaPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/CfCqj5bgJAGChpNqi7Ii4AYBEmPXtUjQ6JqQHfRQgKDRQ2wOhQACCCCAgNcECBpW1DhPbFaosk8EEEAAAQcKWBM0EPrwKZAkRFwlwC3IXfVJ2fjXAFrgoZzPSg5AggggAACCJgo8FyYtMDl4b6IQAAAABJRU5ErkJggg.png"))); // NOI18N
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MapaPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Mapa");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MapaPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 61, 30));

        javax.swing.GroupLayout SideMenuPanelLayout = new javax.swing.GroupLayout(SideMenuPanel);
        SideMenuPanel.setLayout(SideMenuPanelLayout);
        SideMenuPanelLayout.setHorizontalGroup(
            SideMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SideMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(PerfilPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(AlertasPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(MapaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        SideMenuPanelLayout.setVerticalGroup(
            SideMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SideMenuPanelLayout.createSequentialGroup()
                .addComponent(MapaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(AlertasPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(PerfilPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        BotaoPanel.setLayout(new java.awt.BorderLayout());

        BotaoAlerta.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        BotaoAlerta.setText("Adicionar Alerta");
        BotaoAlerta.setBorder(null);
        BotaoAlerta.setBorderPainted(false);
        BotaoAlerta.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BotaoAlerta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoAlertaActionPerformed(evt);
            }
        });
        BotaoPanel.add(BotaoAlerta, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jButton1.setText("Excluir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addComponent(SideMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(BotaoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 776, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        BackgroundLayout.setVerticalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(BotaoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addComponent(SideMenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PerfilPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PerfilPanelMouseEntered
        PerfilPanel.setBackground(SideMenuPanel.getBackground().darker());
    }//GEN-LAST:event_PerfilPanelMouseEntered

    private void PerfilPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PerfilPanelMouseExited
        PerfilPanel.setBackground(SideMenuPanel.getBackground().brighter());
    }//GEN-LAST:event_PerfilPanelMouseExited

    private void AlertasPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlertasPanelMouseEntered
        AlertasPanel.setBackground(SideMenuPanel.getBackground().darker());
    }//GEN-LAST:event_AlertasPanelMouseEntered

    private void AlertasPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlertasPanelMouseExited
        AlertasPanel.setBackground(SideMenuPanel.getBackground().brighter());
    }//GEN-LAST:event_AlertasPanelMouseExited

    private void MapaPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MapaPanelMouseEntered
        MapaPanel.setBackground(SideMenuPanel.getBackground().darker());
    }//GEN-LAST:event_MapaPanelMouseEntered

    private void MapaPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MapaPanelMouseExited
        MapaPanel.setBackground(SideMenuPanel.getBackground().brighter());
    }//GEN-LAST:event_MapaPanelMouseExited

    private void BotaoAlertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoAlertaActionPerformed
            JDialog dialog = new JDialog(this, "Novo Alerta", true);
    dialog.setLayout(new BorderLayout(10, 10));

    // Usando array para contornar a restrição de variável final
    final GeoPosition[] selectedPosition = {null};

    // Painel de formulário
    JPanel formPanel = new JPanel(new GridLayout(4, 2, 10, 10));
    
    // Tipos de ocorrências
    String[] tiposOcorrencias = {
        "Engarrafamento", "Alagamento", "Acidente", 
        "Obra na pista", "Bloqueio", "Manifestação"
    };
    
    // Níveis de urgência
    String[] niveisUrgencia = {
        "Crítico - Interdição total",
        "Alto - Tráfego lento", 
        "Médio - Possível atraso", 
        "Baixo - Tráfego normal"
    };
    
    // Componentes do formulário
    JComboBox<String> tipoField = new JComboBox<>(tiposOcorrencias);
    JSpinner horaField = new JSpinner(new SpinnerDateModel());
    JComboBox<String> nivelField = new JComboBox<>(niveisUrgencia);
    
    // Configuração do spinner de hora
    JSpinner.DateEditor timeEditor = new JSpinner.DateEditor(horaField, "HH:mm");
    horaField.setEditor(timeEditor);
    horaField.setValue(new Date());

    // Componentes para seleção de localização
    JButton selectLocationBtn = new JButton("Selecionar no mapa");
    JLabel locationLabel = new JLabel("Nenhum local selecionado");
    locationLabel.setBorder(BorderFactory.createEtchedBorder());

    // Configuração do mapa
    JXMapViewer mapViewer = new JXMapViewer();
    mapViewer.setZoom(12);
    
    // Usando OpenStreetMap
    TileFactoryInfo info = new OSMTileFactoryInfo();
    DefaultTileFactory tileFactory = new DefaultTileFactory(info);
    mapViewer.setTileFactory(tileFactory);
    
    // Centraliza em uma localização inicial (ex: São Paulo)
    mapViewer.setAddressLocation(new GeoPosition(-23.5505, -46.6333));

    // Configura controles de navegação do mapa
    PanMouseInputListener panListener = new PanMouseInputListener(mapViewer);
    mapViewer.addMouseListener(panListener);
    mapViewer.addMouseMotionListener(panListener);
    mapViewer.addMouseWheelListener(new ZoomMouseWheelListenerCursor(mapViewer));
    mapViewer.addKeyListener(new PanKeyListener(mapViewer));

    // Painel do mapa (inicialmente oculto)
    JPanel mapPanel = new JPanel(new BorderLayout());
    mapPanel.add(mapViewer, BorderLayout.CENTER);
    mapPanel.setPreferredSize(new Dimension(600, 400));
    mapPanel.setVisible(false);
    
    // Botão para confirmar localização
    JButton confirmLocationBtn = new JButton("Confirmar Localização");
    confirmLocationBtn.setVisible(false);

    // Ação do botão de seleção no mapa
    selectLocationBtn.addActionListener(e -> {
        formPanel.setVisible(false);
        mapPanel.setVisible(true);
        confirmLocationBtn.setVisible(true);
        dialog.pack();
    });

    // Listener para clique no mapa
    mapViewer.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent e) {
            Point2D clickPoint = e.getPoint();
            Rectangle2D viewportBounds = mapViewer.getViewportBounds();
            
            double x = viewportBounds.getX() + clickPoint.getX();
            double y = viewportBounds.getY() + clickPoint.getY();
            
            selectedPosition[0] = mapViewer.getTileFactory().pixelToGeo(
                new Point2D.Double(x, y), 
                mapViewer.getZoom()
            );
            
            // Adiciona marcador no local selecionado
            Set<Waypoint> waypoints = new HashSet<>();
            waypoints.add(new DefaultWaypoint(selectedPosition[0]));
            
            WaypointPainter<Waypoint> waypointPainter = new WaypointPainter<>();
            waypointPainter.setWaypoints(waypoints);
            mapViewer.setOverlayPainter(waypointPainter);
            
            mapViewer.repaint();
        }
    });

    // Ação do botão de confirmar localização
    confirmLocationBtn.addActionListener(e -> {
        if (selectedPosition[0] != null) {
            locationLabel.setText(String.format("Lat: %.4f, Long: %.4f", 
                selectedPosition[0].getLatitude(), 
                selectedPosition[0].getLongitude()));
        }
        mapPanel.setVisible(false);
        formPanel.setVisible(true);
        confirmLocationBtn.setVisible(false);
        dialog.pack();
    });

    // Botão de salvar
    JButton saveButton = new JButton("Salvar");
    saveButton.addActionListener(e -> {
        if (selectedPosition[0] == null) {
            JOptionPane.showMessageDialog(dialog, "Selecione um local no mapa!");
            return;
        }
        
        String tipo = (String) tipoField.getSelectedItem();
        Date hora = (Date) horaField.getValue();
        String nivel = (String) nivelField.getSelectedItem();
        
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
        String horaFormatada = sdf.format(hora);
        
        String localizacao = String.format("%.4f, %.4f", 
            selectedPosition[0].getLatitude(), 
            selectedPosition[0].getLongitude());
        
        DefaultTableModel model = (DefaultTableModel) AlertsTable.getModel();
        model.addRow(new Object[]{tipo, horaFormatada, nivel, localizacao});
        dialog.dispose();
    });

    // Adicionando componentes ao formulário
    formPanel.add(new JLabel("Tipo de ocorrência:"));
    formPanel.add(tipoField);
    formPanel.add(new JLabel("Hora:"));
    formPanel.add(horaField);
    formPanel.add(new JLabel("Nível de urgência:"));
    formPanel.add(nivelField);
    formPanel.add(new JLabel("Localização:"));
    formPanel.add(selectLocationBtn);
    formPanel.add(new JLabel("Local selecionado:"));
    formPanel.add(locationLabel);

    // Painel de botões
    JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT));
    buttonPanel.add(saveButton);

    // Adicionando tudo ao diálogo
    dialog.add(formPanel, BorderLayout.NORTH);
    dialog.add(mapPanel, BorderLayout.CENTER);
    dialog.add(confirmLocationBtn, BorderLayout.SOUTH);
    dialog.add(buttonPanel, BorderLayout.PAGE_END);

    dialog.pack();
    dialog.setSize(600, 500);
    dialog.setLocationRelativeTo(this);
    dialog.setVisible(true);
    }//GEN-LAST:event_BotaoAlertaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlertPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlertPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlertPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlertPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlertPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AlertasPanel;
    private javax.swing.JTable AlertsTable;
    private javax.swing.JPanel Background;
    private javax.swing.JButton BotaoAlerta;
    private javax.swing.JPanel BotaoPanel;
    private javax.swing.JPanel MapaPanel;
    private javax.swing.JPanel PerfilPanel;
    private javax.swing.JPanel SideMenuPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
