/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;
import api.ApiClient;
import org.jxmapviewer.viewer.GeoPosition;
import org.jxmapviewer.JXMapViewer;

import java.awt.Point;
import java.net.URL;
import java.net.HttpURLConnection;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.Scanner;
import org.json.JSONObject;

/**
 *
 * @author alway
 */
public class WaypointSelection extends javax.swing.JDialog {
    
    private String tipoOcorrencia;
    private String urgencia;
    private String dataISO;
    private String nomeRua;
    double latitude;
    private double longitude;

    
    public void setTipoOcorrencia(String tipoOcorrencia) {
    this.tipoOcorrencia = tipoOcorrencia;
    }

    public void setUrgencia(String urgencia) {
        this.urgencia = urgencia;
    }

    public void setDataISO(String dataISO) {
        this.dataISO = dataISO;
    }

    /**
     * Creates new form AddAlertMap
     * @param parent
     * @param modal
     */
    public WaypointSelection(java.awt.Window parent, boolean modal) {
    super(parent); // JDialog(Window owner)
    initComponents();
    setModal(modal); // define modalidade se necessário
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelMapViewer = new javax.swing.JPanel();
        InfosPanel = new javax.swing.JPanel();
        TextLocal = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextAreaAddress = new javax.swing.JTextArea();
        CoordTextField = new javax.swing.JTextField();
        CoordenadasText = new javax.swing.JLabel();
        ConfirmButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout PanelMapViewerLayout = new javax.swing.GroupLayout(PanelMapViewer);
        PanelMapViewer.setLayout(PanelMapViewerLayout);
        PanelMapViewerLayout.setHorizontalGroup(
            PanelMapViewerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 641, Short.MAX_VALUE)
        );
        PanelMapViewerLayout.setVerticalGroup(
            PanelMapViewerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        TextLocal.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        TextLocal.setText("Local");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        TextAreaAddress.setColumns(5);
        TextAreaAddress.setRows(5);
        jScrollPane1.setViewportView(TextAreaAddress);
        TextAreaAddress.setLineWrap(true);               // Ativa quebra de linha automática
        TextAreaAddress.setWrapStyleWord(true);          // Quebra apenas em palavras (evita cortar no meio)

        CoordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoordTextFieldActionPerformed(evt);
            }
        });

        CoordenadasText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CoordenadasText.setText("Coordenadas");

        ConfirmButton.setBackground(new java.awt.Color(0, 204, 0));
        ConfirmButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ConfirmButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Check--Streamline-Feather.png"))); // NOI18N
        ConfirmButton.setText("Confirmar");
        ConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InfosPanelLayout = new javax.swing.GroupLayout(InfosPanel);
        InfosPanel.setLayout(InfosPanelLayout);
        InfosPanelLayout.setHorizontalGroup(
            InfosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InfosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(CoordTextField, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(InfosPanelLayout.createSequentialGroup()
                .addGroup(InfosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InfosPanelLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(ConfirmButton))
                    .addGroup(InfosPanelLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(CoordenadasText)))
                .addGap(0, 33, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InfosPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TextLocal)
                .addGap(66, 66, 66))
        );
        InfosPanelLayout.setVerticalGroup(
            InfosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfosPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(TextLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CoordenadasText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CoordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 150, Short.MAX_VALUE)
                .addComponent(ConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelMapViewer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InfosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelMapViewer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(InfosPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        // === Configuração do painel principal ===
        PanelMapViewer.setMinimumSize(new java.awt.Dimension(800, 600));
        PanelMapViewer.setLayout(new java.awt.BorderLayout()); // garante layout adequado

        // === Adiciona o componente de mapa personalizado ===
        view.components.MapComponent mapComponent = new view.components.MapComponent();
        PanelMapViewer.add(mapComponent, java.awt.BorderLayout.CENTER);

        // === Configura a janela principal ===
        setSize(800, 600);
        setResizable(false);
        setLocationRelativeTo(null);

        // === Zoom inicial e localização automática (opcional) ===
        mapComponent.getMap().setZoom(7); // você pode ajustar para 7 ou 12
        mapComponent.centralizarNaLocalizacaoAtual(); // se você implementou esse método

        // === Lógica de clique no mapa ===
        org.jxmapviewer.JXMapViewer mapViewer = mapComponent.getMap();

        mapViewer.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent e) {
                java.awt.Point pt = e.getPoint();
                org.jxmapviewer.viewer.GeoPosition geo = mapViewer.convertPointToGeoPosition(pt);

                // Adiciona pino no mapa (sem remover os anteriores)
                mapComponent.adicionarWaypoint(geo);

                // Atualiza campo de coordenadas
                String coordText = String.format("%.6f, %.6f", geo.getLatitude(), geo.getLongitude());
                CoordTextField.setText(coordText);

                // Faz reverse geocoding (lat/lon → endereço)
                try {
                    String urlStr = String.format(
                        "https://nominatim.openstreetmap.org/reverse?format=json&lat=%s&lon=%s",
                        String.valueOf(geo.getLatitude()).replace(",", "."),
                        String.valueOf(geo.getLongitude()).replace(",", ".")
                    );

                    java.net.URL url = new java.net.URL(urlStr);
                    java.net.HttpURLConnection conn = (java.net.HttpURLConnection) url.openConnection();
                    conn.setRequestProperty("User-Agent", "JavaApp");
                    conn.connect();

                    String response = new java.util.Scanner(conn.getInputStream()).useDelimiter("\\A").next();
                    org.json.JSONObject json = new org.json.JSONObject(response);

                    String endereco = json.getString("display_name");
                    TextAreaAddress.setText(endereco);

                    // *** AQUI: salva nas variáveis da classe ***
                    WaypointSelection.this.latitude = geo.getLatitude();
                    WaypointSelection.this.longitude = geo.getLongitude();
                    WaypointSelection.this.nomeRua = endereco;

                } catch (Exception ex) {
                    TextAreaAddress.setText("Erro ao buscar endereço: " + ex.getMessage());
                    ex.printStackTrace();
                }

                System.out.println("Pino adicionado: " + geo.getLatitude() + ", " + geo.getLongitude());
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CoordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CoordTextFieldActionPerformed

    private void ConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmButtonActionPerformed
        System.out.println("Confirmar clicado");
    System.out.println("tipoOcorrencia: " + tipoOcorrencia);
    System.out.println("urgencia: " + urgencia);
    System.out.println("dataISO: " + dataISO);
    System.out.println("nomeRua: " + nomeRua);
    System.out.println("latitude: " + latitude);
    System.out.println("longitude: " + longitude);

    enviarAlerta();
    }//GEN-LAST:event_ConfirmButtonActionPerformed
private void enviarAlerta() {
    try {
        // Suponha que você receba esses dados da tela anterior (AdicionarAlerta)
        String tipoOcorrencia = this.tipoOcorrencia; 
        String urgencia = this.urgencia;
        String dataISOOriginal = this.dataISO;

        // Dados de localização definidos neste mapa
        String endereco = this.nomeRua;
        double latitude = this.latitude;
        double longitude = this.longitude;

// Remove o trecho entre colchetes, ex: [America/Sao_Paulo]
int indexBracket = dataISOOriginal.indexOf('[');
if (indexBracket != -1) {
    dataISOOriginal = dataISOOriginal.substring(0, indexBracket);
}

ZonedDateTime zdt = ZonedDateTime.parse(dataISOOriginal);
DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ssXXX");
String dataFormatada = zdt.format(formatter);
        
                System.out.println("tipoOcorrencia = " + tipoOcorrencia);
System.out.println("urgencia = " + urgencia);
System.out.println("dataISO = " + dataFormatada);
System.out.println("nomeRua = " + nomeRua);
System.out.println("latitude = " + latitude);
System.out.println("longitude = " + longitude);

        // Montando o JSON
        org.json.JSONObject json = new org.json.JSONObject();
        json.put("tipoOcorrencia", tipoOcorrencia);
        json.put("urgencia", urgencia);
        json.put("data", dataFormatada);

        org.json.JSONObject address = new org.json.JSONObject();
        address.put("endereco", endereco);
        address.put("latitude", latitude);
        address.put("longitude", longitude);

        json.put("address", address);

        // Enviando para a API
        String resposta = ApiClient.post("alert", json.toString());

        // Exibe feedback e fecha a janela
        javax.swing.JOptionPane.showMessageDialog(this, "Alerta enviado com sucesso!");
        this.dispose(); // fecha a janela de mapa
    }catch (Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Erro ao enviar alerta: " + e.getMessage());
        e.printStackTrace();
    }
        // Se falhar no parse, trate aqui
        
    
    
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WaypointSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WaypointSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WaypointSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WaypointSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                WaypointSelection dialog = new WaypointSelection(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ConfirmButton;
    private javax.swing.JTextField CoordTextField;
    private javax.swing.JLabel CoordenadasText;
    private javax.swing.JPanel InfosPanel;
    private javax.swing.JPanel PanelMapViewer;
    private javax.swing.JTextArea TextAreaAddress;
    private javax.swing.JLabel TextLocal;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
