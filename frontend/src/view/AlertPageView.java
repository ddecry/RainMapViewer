/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import api.ApiClient;
import java.awt.BasicStroke;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Graphics2D;
import java.awt.GridLayout;
import javax.swing.*;
import java.awt.event.*;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Date;
import java.util.Scanner;
import java.util.Set;
import org.jxmapviewer.JXMapViewer;
import org.jxmapviewer.viewer.DefaultWaypoint;
import org.jxmapviewer.viewer.GeoPosition;
import org.jxmapviewer.viewer.Waypoint;
import org.jxmapviewer.viewer.WaypointPainter;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import view.components.MapComponent;
import view.components.SideMenuComponent;

/**
 *
 * @author alway
 */
public class AlertPageView extends JFrame {

    /**
     * Creates new form MainPage
     */
    public AlertPageView() {
        initComponents();

        SideMenuComponent sideMenu = new SideMenuComponent();
        Background.setLayout(new BorderLayout());
        Background.add(sideMenu, BorderLayout.WEST);


        carregarAlertasDoBackend(null); // Carrega todos os alertas ao abrir

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Background = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AlertsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        AddAlertButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Flood Viewer");

        Background.setBackground(new java.awt.Color(102, 204, 255));
        Background.setToolTipText("");

        AlertsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "Alagamento", "22:30", "Crítico", "Rua 19 de Novembro", null, null},
                {null, "Engarrafamento", "17:00", "Médio", "Ponte Estaiada", null, null},
                {null, "Alagamento", "15:00", "Baixo", "Avenida Brasil", null, null}
            },
            new String [] {
                "ID", "Tipo", "Hora", "Nível", "Local", "Latitude", "Longitude"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(AlertsTable);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Alertas");

        jButton2.setBackground(new java.awt.Color(255, 0, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/X--Streamline-Feather.png"))); // NOI18N
        jButton2.setText("Excluir Alerta");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton2.setDisabledIcon(null);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jButton2.setIconTextGap(0);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        AddAlertButton.setBackground(new java.awt.Color(0, 204, 0));
        AddAlertButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        AddAlertButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Plus--Streamline-Feather.png"))); // NOI18N
        AddAlertButton.setText("Adicionar Alerta");
        AddAlertButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        AddAlertButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        AddAlertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // === Ação para abrir a JDialog AdicionarAlertaView ===
                AdicionarAlertaView dialog = new AdicionarAlertaView((java.awt.Frame) javax.swing.SwingUtilities.getWindowAncestor(AddAlertButton), true);
                dialog.setLocationRelativeTo(AddAlertButton); // centraliza em relação ao botão
                dialog.setVisible(true);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Calendar--Streamline-Feather.png"))); // NOI18N
        jButton3.setText("Última semana");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton3.setIconTextGap(7);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Clock--Streamline-Feather.png"))); // NOI18N
        jButton4.setText("Últimas 24h");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton4.setIconTextGap(7);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addContainerGap(241, Short.MAX_VALUE)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundLayout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jButton2))
                    .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(BackgroundLayout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(332, 332, 332))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundLayout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AddAlertButton)))
                .addGap(26, 26, 26))
        );
        BackgroundLayout.setVerticalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AddAlertButton)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
excluirAlertaSelecionado();    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        carregarAlertasDoBackend("24h");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        carregarAlertasDoBackend("27d");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void carregarAlertasDoBackend(String filtro) {
    try {
        String endpoint = "alert";
        if (filtro != null && !filtro.isEmpty()) {
            endpoint += "?filtro=" + URLEncoder.encode(filtro, StandardCharsets.UTF_8);
        }

        String response = ApiClient.getAll(endpoint);
        JSONArray alertas = new JSONArray(response.trim());

        DefaultTableModel model = (DefaultTableModel) AlertsTable.getModel();
        model.setRowCount(0);

        for (int i = 0; i < alertas.length(); i++) {
            JSONObject alerta = alertas.getJSONObject(i);

            String tipo = alerta.getString("tipoOcorrencia");
            String urgencia = alerta.getString("urgencia");

            String dataRaw = alerta.getString("data");
            OffsetDateTime data = OffsetDateTime.parse(dataRaw);
            String dataFormatada = data.format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm"));

            JSONObject endereco = alerta.getJSONObject("address");
            String local = endereco.getString("endereco");
            double latitude = endereco.getDouble("latitude");
            double longitude = endereco.getDouble("longitude");

            model.addRow(new Object[]{alerta.getLong("id"), tipo, dataFormatada, urgencia, local, latitude, longitude});
            AlertsTable.getColumnModel().getColumn(0).setMinWidth(0);
            AlertsTable.getColumnModel().getColumn(0).setMaxWidth(0);
            AlertsTable.getColumnModel().getColumn(0).setWidth(0);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erro ao carregar alertas: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
}

    private void excluirAlertaSelecionado() {
    int linhaSelecionada = AlertsTable.getSelectedRow();

    if (linhaSelecionada == -1) {
        JOptionPane.showMessageDialog(this, "Selecione um alerta para excluir.", "Aviso", JOptionPane.WARNING_MESSAGE);
        return;
    }

    Long idAlerta = Long.parseLong(AlertsTable.getValueAt(linhaSelecionada, 0).toString());

    int confirm = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir este alerta?", "Confirmação", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        try {
            ApiClient.delete("alert/" + idAlerta);
            carregarAlertasDoBackend(null);
            AlertsTable.repaint();
            JOptionPane.showMessageDialog(this, "Alerta excluído com sucesso.");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erro ao excluir alerta: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }
}
    /**
     *
     * @param args
     */

    public static void main(String[] args) {
    java.awt.EventQueue.invokeLater(() -> {
        new AlertPageView().setVisible(true);
    });
}

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddAlertButton;
    private javax.swing.JTable AlertsTable;
    private javax.swing.JPanel Background;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private GeoPosition getCurrentLocationFromIP() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
